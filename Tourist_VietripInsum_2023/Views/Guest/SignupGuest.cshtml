@model Tourist_VietripInsum_2023.Models.KhachHang


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" name="viewport">
    <link rel="stylesheet" type="text/css" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" type="text/css" href="style_profile.css">
    <link rel="stylesheet" type="text/css" href="~/Content/vendor/bootstrap/css/bootstrap.min.css">
    <link rel="stylesheet" type="text/css" href="~/Content/css/util.css">
    <link href="~/Content/Test01/mainDKyDL.css" rel="stylesheet" />
    <link href="~/Content/bootstrap-5.0.2-dist/css/bootstrap.min.css" rel="stylesheet" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/2.1.2/sweetalert.min.js"></script>
    <link rel="stylesheet" href="https://unpkg.com/boxicons@latest/css/boxicons.min.css">
</head>
<body>
    @if (TempData["errorInfo"] != null)
    {
        <script>
            swal({
                title: "@TempData["errorInfo"]",
                icon: "warning",
                button: "Thoát",
            });
        </script>
    }
    @using (Html.BeginForm("SignupGuest", "Guest", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <div class="container">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.MaKH)
            @Html.HiddenFor(model => model.MaLoaiKH)
            <div class="bg-white shadow rounded-lg d-block d-sm-flex">
                <div class="profile-tab-nav border-right">
                    <div class="p-4">
                        <h4>Choose Avatar</h4>
                        <div style="width: 100%; height: auto; border-radius:50%;">
                            <br />
                            @Html.TextBox("ImagerCus", "", new { type = "file" })
                            <br />
                            <br />
                            <img id="preview" src="#" width="100%" height="auto" style="visibility: hidden; border-radius: 50%; margin-bottom: 20px;" />
                        </div>
                    </div>
                </div>
                <div class="tab-content p-4 p-md-5" id="v-pills-tabContent">
                    <div class="tab-pane fade show active" id="account" role="tabpanel" aria-labelledby="account-tab">
                        <h3 class="mb-4">Profile Settings</h3>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>Full Name</label>
                                    @Html.EditorFor(model => model.HoTenKH, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                                    @Html.ValidationMessageFor(model => model.HoTenKH, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>Phone number</label>
                                    @Html.EditorFor(model => model.SDT, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                                    @Html.ValidationMessageFor(model => model.SDT, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>Address</label>
                                    @Html.EditorFor(model => model.DiaChi, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                                    @Html.ValidationMessageFor(model => model.DiaChi, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>Email</label>
                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", required = "required", @id = "Email", onchange = "EmailCheck()" } })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                    <span id="mess"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>Birthday</label>
                                    @Html.EditorFor(model => model.NgaySinh, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                                    @Html.ValidationMessageFor(model => model.NgaySinh, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>Gender:</label>
                                    <select name="GioiTinh" class="form-control form-select">
                                        <option value="Nam"> Male </option>
                                        <option value="Nu"> Female</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                        <h3 class="mb-4">Account Settings</h3>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>Username</label>
                                    @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control", required = "required", @placeholder = "Tên đăng nhập", @id = "Username", onchange = "UserNameCheck()" } })
                                    @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                                    <span id="status"></span>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>Password</label>
                                    @Html.EditorFor(model => model.UserPassword, new { htmlAttributes = new { @class = "form-control", @type = "password" } })
                                    @Html.ValidationMessageFor(model => model.UserPassword, "", new { @class = "text-danger" })
                                    <span class="focus-input100"></span>
                                    @if (TempData["errorPass"] != null)
                                    {
                                        <p style="color: red;">
                                            @TempData["errorPass"]
                                        </p>
                                    }
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>Confirm new password</label>
                                    <input class="form-control col-md-12 text-box single-line" type="password" name="ConfirmPassword" placeholder="Xác thực mật khẩu" />
                                    @if (TempData["errorMK"] != null)
                                    {
                                        <p style="color: red;">
                                            @TempData["errorMK"]
                                        </p>
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div style="text-align: center; margin-top: 10px;">
                                <a class="btn btn-danger btn-sm" href="/Guest/LoginGuest">Đăng nhập</a>
                                <input class="btn btn-success btn-sm" type="submit" value="Đăng ký" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

    <script>
        ImagerCus.onchange = evt => {
            const [file] = ImagerCus.files
            if (file) {
                preview.src = URL.createObjectURL(file);
                document.getElementById("preview").style.visibility = "visible";
            }
        }
    </script>
    <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
    <script src="Scripts/jquery-1.4.1.js" type="text/javascript"></script>

    <script type="text/javascript">
        function EmailCheck() {
            $("#mess").html("check ...");
            $.post("@Url.Action("CheckEmailAvailability", "Guest")",
                {
                    Email: $("#Email").val()
                },
                function (data) {
                    if (data == 0) {
                        $("#mess").html('<font color="Green">Available!</font>');
                        $("#Email").css("border-color", "Green");
                    }
                    else {
                        $("#mess").html('<font color="Red">Email này đã tồn tại</font>');
                        $("#Email").css("border-color", "Red");
                    }
                }
            )
        }
        function UserNameCheck() {
            $("#status").html("check ...");
            $.post("@Url.Action("CheckUserNameAvailability", "Guest")",
                {
                    userName: $("#Username").val()
                },
                function (data) {
                    if (data == 0) {
                        $("#status").html('<font color="Green">Available!</font>');
                        $("#Username").css("border-color", "Green");
                    }
                    else {
                        $("#status").html('<font color="Red">Tên đăng nhập đã tồn tại</font>');
                        $("#Username").css("border-color", "Red");
                    }
                }
            )
        }
    </script>

    <!--Javascript-->
    <script src="~/Content/js/main.js"></script>
    <script type="text/javascript">
        //show - hide mật khẩu
        function myFunction() {
            var x = document.getElementById("myInput");
            if (x.type === "password") {
                x.type = "text"
            } else {
                x.type = "password";
            }
        }
        $(".click-eye").click(function () {
            $(this).toggleClass("bx-show bx-hide");
            var input = $($(this).attr("toggle"));
            if (input.attr("type") == "password") {
                input.attr("type", "text");
            } else {
                input.attr("type", "password");
            }
        });
        const ipnElement = document.querySelector('#UserPassword')
        const spanElement = document.querySelector('#spanElement')
        // step 2
        spanElement.addEventListener('click', function () {
            // step 3
            const currentType = ipnElement.getAttribute('type')
            // step 4
            ipnElement.setAttribute(
                'type',
                currentType === 'password' ? 'text' : 'password'
            )
        })
    </script>
</body>
</html>