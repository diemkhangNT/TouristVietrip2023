@model Tourist_VietripInsum_2023.Models.KhachHang

@{
    ViewBag.Title = "EditGuest";
    Layout = "~/Views/Admin/AdminView.cshtml";
    ViewBag.Name = "Cập nhật thông tin khách hàng";

}

<div class="tile" style="margin:10px 20px;">
    <h3 class="tile-title">CẬP NHẬT THÔNG TIN KHÁCH HÀNG</h3>
    <div class="tile-body contenner">
        <form class="row" method="post" enctype="multipart/form-data" action="">
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.MaKH)
            <div class="imgstaff col-sm-5" style="padding-left:40px;">
                <div class="col-sm-12" style="text-align: center;">
                    <label class="control-label">Chọn hình ảnh</label>
                    <input type="file" name="HinhDaiDien" style="padding-bottom: 20px;" />
                    @*@Html.TextBox("Avatar", "", new { type = "file", @class = "fas fa-cloud-upload-alt", value = "@Model.HinhDaiDien" })*@
                    @*<input class="fas fa-cloud-upload-alt" id="Avatar" name="Avatar" type="file">*@
                    <br />
                    <img src="~/images/@Model.HinhDaiDien" id="preview" class="rounded-circle " width="150" height="150" style="margin-bottom: 14px; text-align: center;" />
                    <br />
                </div>
                <h5>THÔNG TIN TÀI KHOẢN</h5>
                <div class="row">
                    
                    <div class="form-group col-md-12">
                      <b>Username</b>
                        @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control", required = "required", @id = "Username", onchange = "UsernameKHCheck()" } })
                        @*<input class="form-control" type="text" id="Username" name="Username" required="required"/>*@
                        @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                        <span id="status"></span>

                    </div>
                    <div class="form-group col-md-12">
                        @Html.LabelFor(model => model.UserPassword, htmlAttributes: new { @class = "control-label col-md-3" })
                        <input id="UserPassword" name="UserPassword" type="password" class="form-control" value="@Model.UserPassword" />
                        @Html.ValidationMessageFor(model => model.UserPassword, "", new { @class = "text-danger" })

                    </div>
                    

                </div>



            </div>
            <div class="info-staff col-sm-6">
                <h5>THÔNG TIN CÁ NHÂN</h5>
                <div class="row">
                    <div class="form-group col-md-12">
                       <b>Họ tên khách hàng</b>
                        @Html.EditorFor(model => model.HoTenKH, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                        @Html.ValidationMessageFor(model => model.HoTenKH, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-6">
                        <b>Mã khách hàng</b>
                        @Html.EditorFor(model => model.MaKH, new { htmlAttributes = new { @class = "form-control",@id = "MaKH", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.MaKH, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-6">
                        <b>Loại khách hàng</b>
                        @Html.DropDownList("MaLoaiKH", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.MaLoaiKH, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-12">
                       <b>Địa chỉ</b>
                        @Html.EditorFor(model => model.DiaChi, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                        @Html.ValidationMessageFor(model => model.DiaChi, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-6">
                       <b>Ngày sinh</b>
                        <input class="form-control text-box single-line" data-val="true" data-val-date="The field NgaySinh must be a date." id="NgaySinh" name="NgaySinh" required="required" value="@Model.NgaySinh">
                        @Html.ValidationMessageFor(model => model.NgaySinh, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-md-6">
                        <b>Giới tính</b>
                        <select class="form-control" id="GioiTinh" name="GioiTinh">
                            <option selected="@Model.GioiTinh">@Model.GioiTinh</option>
                            <option>Nữ</option>
                            <option>Nam</option>
                        </select>
                        @Html.ValidationMessageFor(model => model.GioiTinh, "", new { @class = "text-danger", required = "required" })
                    </div>
                    <div class="form-group col-md-6">
                        <b>Số điện thoại</b>
                        @Html.EditorFor(model => model.SDT, new { htmlAttributes = new { @class = "form-control", required = "required", @id = "SDT", onchange = " SDTCheck()" } })
                        @*@Html.ValidationMessageFor(model => model.Sdt, "", new { @class = "text-danger" })*@
                        <span id="sdtcheck"></span>
                    </div>

                    <div class="form-group col-md-6">
                       <b>Email</b>
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", required = "required", @id = "Email", onchange = "EmailCheck()" } })
                        @*@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })*@
                        <span id="mess"></span>
                    </div>
                </div>
            </div>
            <div class="col-sm-5">

                <p> @Html.ValidationSummary(true, "", new { @class = "text-danger" })</p>

            </div>
            <div class="col-sm-5">
                <div class="row">
                    <div class="col-sm-2">
                        <input type="submit" id="btn-submit" value="Cập nhật thông tin" class="btn btn-success btn-sm" />
                    </div>
                    <div class="col-sm-2">
                        <a href="/Admin/ListOfCustomers" class="btn btn-warning btn-sm">Quay lại danh sách</a>
                    </div>

                </div>
            </div>
        </form>
    </div>



</div>


@* script của upload *@

<script>
    Avatar.onchange = evt => {
        const [file] = Avatar.files
        if (file) {
            preview.src = URL.createObjectURL(file);
            document.getElementById("preview").style.visibility = "visible";
        }
    }
</script>
<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
<script src="Scripts/jquery-1.4.1.js" type="text/javascript"></script>
<script type="text/javascript">
     function UsernameKHCheck() {
        $("#status").html("check ...");
        $.post("@Url.Action("CheckUserKH", "Admin")",
            {
                userdata: $("#Username").val(),
                makh: $("#MaKH").val()
            },
            function (data) {
                if (data == 0) {
                    $("#status").html('<font color="Green">Available!</font>');
                    $("#Username").css("border-color", "Green");
                }
                else {
                    $("#status").html('<font color="Red">That name is taken. Try another !!</font>');
                    $("#Username").css("border-color", "Red");
                }
            }
        )
    }

     function EmailCheck() {
        $("#mess").html("check ...");
        $.post("@Url.Action("CheckMail", "Guest")",
            {
                usermail: $("#Email").val(),
                makh: $("#MaKH").val()
            },
            function (data) {
                if (data == 0) {
                    $("#mess").html('<font color="Green">Hợp lệ!</font>');
                    $("#Email").css("border-color", "Green");
                    document.getElementById('btn-submit').disabled = false;
                }
                else if (data == 1) {
                    $("#mess").html('<font color="Red">Đã có người dùng sử dụng !!</font>');
                    $("#Email").css("border-color", "Red");
                    document.getElementById('btn-submit').disabled = true;
                }
                 else {
                    $("#mess").html('<font color="Red">Mail không đúng định dạng!!</font>');
                    $("#Email").css("border-color", "Red");
                    document.getElementById('btn-submit').disabled = true;
                }
            }
        )
    }

     function SDTCheck() {
        $("#sdtcheck").html("check ...");
        $.post("@Url.Action("CheckSDT", "Guest")",
            {
                userSDT: $("#SDT").val(),
                makh: $("#MaKH").val()
            },
            function (data) {
                if (data == 0) {
                    $("#sdtcheck").html('<font color="Green">Hợp lệ !</font>');
                    $("#SDT").css("border-color", "green");
                    document.getElementById('btn-submit').disabled = false;
                }
                else if (data == 2) {
                    $("#sdtcheck").html('<font color="Red">Đã được sử dụng !!</font>');
                    $("#SDT").css("border-color", "Red");
                    document.getElementById('btn-submit').disabled = true;
                }
                 else {
                    $("#sdtcheck").html('<font color="Red">Số điện thoại không đúng định dạng!!</font>');
                    $("#SDT").css("border-color", "Red");
                    document.getElementById('btn-submit').disabled = true;
                }
            }
        )
    }

</script>
