@model Tourist_VietripInsum_2023.Models.Staff
@using Tourist_VietripInsum_2023.Models;

@{
    ViewBag.Title = "CreateUser";
    Layout = "~/Views/Admin/AdminView.cshtml";
    TouristEntities1 db = new TouristEntities1();
    ViewBag.qlstaff = "active";

    ViewBag.name = "Create Staff";
}

<div class="tile">
    <h3 class="tile-title">CREATE NEW ACCOUNT</h3>
    <div class="tile-body">


        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IdStaff)

        <form class="row" method="post" enctype="multipart/form-data" action="~/Admin/CreateStaff">

            <div class="col-sm-3" style="text-align:center;padding-left:40px;">
                <label class="control-label">Chọn hình ảnh</label>
                @Html.TextBox("Avatar", "", new { type = "file" })
                <br />
                <img id="preview" class="rounded-circle " src="#" width="120" height="120" />
                <br />
            </div>
            <div class="col-sm-9">
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.IdPos, htmlAttributes: new { @class = "control-label col-md-3" })

                    <select class="form-control" id="IdPos" name="IdPos">

                        <option>TM</option>
                        <option>OP</option>
                        <option>AD</option>
                    </select>

                    @Html.ValidationMessageFor(model => model.IdPos, "", new { @class = "text-danger" })

                </div>
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                </div>
                <div class="form-group  col-md-4">
                    @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.StaffEmail, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.StaffEmail, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.StaffEmail, "", new { @class = "text-danger" })
                </div>
                <div class="form-group  col-md-4">
                    @Html.LabelFor(model => model.NumberPhone, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.NumberPhone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NumberPhone, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.StaffAddress, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.StaffAddress, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.StaffAddress, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.StaffBirthday, htmlAttributes: new { @class = "control-label" })
                    <input class="form-control text-box single-line" data-val="true" data-val-date="The field StaffBirthday must be a date." id="StaffBirthday" name="StaffBirthday" type="datetime-local" value="">
                    @Html.ValidationMessageFor(model => model.StaffBirthday, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label" })
                    <select class="form-control" id="Gender" name="Gender">

                        <option>Male</option>
                        <option>Female</option>

                    </select>
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-4">

                </div>
                <div class="form-group">
                    <div class="col-md-10">
                        <input type="submit" value="Save" class="btn btn-success btn-sm" />
                    </div>
                </div>

            </div>

        </form>


    </div>

</div>
<div class="row element-button" style="padding-left:10px">
    <div class="col-sm-2">
        <a class="btn btn-warning btn-sm " type="button" title="Back" href="/Admin/Staffmanager">
            Back to list
        </a>
    </div>
</div>
@* script của upload *@

<script>
    Avatar.onchange = evt => {
        const [file] = Avatar.files
    if (file) {
    preview.src = URL.createObjectURL(file);
    $("#preview").removeClass("hidden");
}
}

</script>