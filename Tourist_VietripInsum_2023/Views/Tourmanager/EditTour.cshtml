@model Tourist_VietripInsum_2023.Models.Tour

@{
    ViewBag.Title = "EditTour";
    Layout = "~/Views/Tourmanager/LayoutTM/_ViewTM.cshtml";
    ViewBag.Name = "Edit Tour";
    ViewBag.qlt = "active";
}

<div class="tile">
    <h4 class="tile-title"> EDIT TOUR</h4>
    <div class="tile-body">

        <form class="row" method="post" enctype="multipart/form-data" action="~/Tourmanager/EditTour">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.MaTour)

            <div class="col-sm-3" style="text-align:center">
                <label class="control-label">Chọn hình ảnh</label>
                @Html.TextBox("ImagerTour", "", new { type = "file" })
                <br />
                <img id="preview" src="#" width="220" height="200" style="visibility:hidden" />
                <br />
            </div>
            <div class="col-sm-9">
                <div class="col-sm-12">
                    <div class="form-group col-sm-6">
                        <strong>Tour name</strong>
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.TenTour, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TenTour, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-sm-6">
                        <strong>Type Tour</strong>
                        <div class="col-md-12">
                            @Html.DropDownList("MaLTour", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.MaLTour, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-12">
                    <div class="form-group col-sm-6">
                        <p><strong>Mã khách sạn: </strong></p>
                        <div class="col-md-12">
                            @Html.DropDownList("MaKS", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.MaKS, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>

                <div class="col-sm-12">
                    <div class="form-group col-sm-6">
                        <strong>Ngày khởi hành: </strong>
                        <div class="col-md-12">
                            @*<input class="form-control text-box single-line" data-val="true" data-val-date="The field StaffBirthday must be a date." id="Departure" name="Departure" type="date" value="@Model.Departure">*@
                            <input class="form-control text-box single-line" data-val="true" data-val-date="The field NgayNhap must be a date." id="NgayTroVe" name="NgayTroVe" type="date" required>
                            @Html.ValidationMessageFor(model => model.NgayKhoihanh, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group col-sm-6">
                        <strong>Ngày trở về: </strong>
                        <div class="col-md-12">
                            @*<input class="form-control text-box single-line" data-val="true" data-val-date="The field must be a date." id="TimeTour" name="TimeTour" type="number" min="0" value="@Model.TimeTour">*@
                            <input class="form-control text-box single-line" data-val="true" data-val-date="The field NgayNhap must be a date." id="NgayTroVe" name="NgayTroVe" type="date" required>
                            @Html.ValidationMessageFor(model => model.NgayTroVe, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-sm-6">
                        <strong>Nơi khởi hành:</strong>
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.NoiKhoiHanh, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NoiKhoiHanh, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>
                <div class="col-sm-12">
                    <div class="form-group col-sm-6">
                        <strong>Số ngày:</strong>
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.SoNgay, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.SoNgay, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-sm-6">
                        <strong>Số chỗ trống: </strong>
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.SoChoNull, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.SoChoNull, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-sm-6">
                        <strong>Giá trẻ em: </strong>
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.GiaTreEm, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.GiaTreEm, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-sm-6">
                        <strong>Giá người lớn: </strong>
                        <div>
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.GiaNguoiLon, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.GiaNguoiLon, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>
                </div>
                <div class="col-sm-12">
                    <div class="form-group col-sm-6">
                        <p><strong>Hạn đặt chỗ: </strong></p>
                        <div class="col-sm-12">
                            <input class="form-control text-box single-line" data-val="true" data-val-date="The field NgayNhap must be a date." id="NgayTroVe" name="NgayTroVe" type="date" required>
                            @Html.ValidationMessageFor(model => model.HanChotDatVe, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-sm-6">
                        <p><strong>Tour nổi bật: </strong></p>
                        <div class="col-sm-12">
                            @Html.EditorFor(model => model.TourNoiBat, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TourNoiBat, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-12">
                <div class="form-group col-sm-2">
                    <div class="col-sm-2">
                        <a class="btn btn-warning btn-sm" href="/Tourmanager/QuanLyTour">Back to list</a>
                    </div>
                </div>
                <div class="form-group col-sm-2 ">
                    <div class="col-sm-2">
                        <input type="submit" value="Edit Tour" class="btn btn-success btn-sm" />
                    </div>
                </div>
               
            </div>
            </form>
    </div>
      
    </div>


<script>
    ImagerTour.onchange = evt => {
        const [file] = ImagerTour.files
        if (file) {
            preview.src = URL.createObjectURL(file);
            document.getElementById("preview").style.visibility = "visible";
        }
    }
</script>
