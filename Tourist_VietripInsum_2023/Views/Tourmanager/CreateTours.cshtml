@model Tourist_VietripInsum_2023.Models.Tour
@using Tourist_VietripInsum_2023.Models
@{
    ViewBag.Title = "CreateTours";
    Layout = "~/Views/Tourmanager/LayoutTM/_ViewTM.cshtml";
    ViewBag.Name = "Create Tour";
    ViewBag.qlt = "active";
    TouristEntities1 db = new TouristEntities1();
    var tinhthanh = db.TinhThanhs.ToList();
    var ks = db.Hotels.ToList();
}
@{
    var checkMessage = TempData["noti"];
    if (checkMessage == "null")
    {
        <script>
            swal({
                title: "Can't save!",
                text: "Invalid data or null!",
                icon: "warning",
                button: "OK",
            });
        </script>
    }
}
<style type="text/css">
    fieldset {
        border: solid 1px gray;
        padding-top: 5px;
        padding-right: 0px;
        padding-bottom: 10px;
        padding-left: 0px;
        margin-left: 30px;
    }

    legend {
        float: none;
        width: inherit;
    }
</style>
<div class="tile">
    <h4 class="tile-title"> CREATE NEW TOUR</h4>
    <div class="tile-body">
        <form class="row" method="post" enctype="multipart/form-data" action="~/Tourmanager/CreateTours">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.MaTour)
            @Html.HiddenFor(model => model.TrangThai)
            <div class="row">
                <div style="display: flex; align-items: center; justify-content: center;" class=" col-md-3 col-sm-12">
                    <h3 class="text-muted">Create image tour</h3>
                </div>
                <div class="col-md-6 col-sm-12" style="text-align:center">

                    <div style="width: 100%; height: auto; border: 2px solid red; padding: 10px; border-radius: 50px 20px;">
                        <br />
                        @Html.TextBox("ImagerTour", "", new { type = "file", @class = "fas fa-cloud-upload-alt" })
                        <br />
                        <br />
                        <img id="preview" src="#" width="100%" height="auto" style="visibility: hidden; border: 4px outset; margin-bottom:20px;" />

                    </div>
                </div>
                <div class="col-md-3 col-sm-12"></div>
            </div>
            <div class="row" style="margin-top:20px;">
                <div class="form-group col-md-3 col-sm-6">
                    @Html.LabelFor(model => model.MaLTour, "Type tour", htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-12">
                        @Html.DropDownList("MaLTour", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.MaLTour, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-3 col-sm-6">

                    <label class="col-md-12 control-label">Mã tỉnh thành</label>
                    <div class="col-md-12">
                        <select class="form-control" id="myDropdown" name="myDropdown" onchange="getDropDown(this)">
                            @{
                                foreach (var item in tinhthanh)
                                {
                                    <option value="@item.MaTinh">@item.TenTinh</option>
                                }
                            }
                        </select>
                    </div>
                </div>
                <div class="form-group col-md-3 col-sm-6">
                    @Html.LabelFor(model => model.MaKS, "MaKS", htmlAttributes: new { @class = "control-label col-md-12" })
                    @{
                        <!--if (ViewBag.MaKSforTinh.Count == 0)
                                {
                                    <p id="removep" class="blue">Vui lòng chọn tỉnh thành</p>
                                }
                                else
                                {
                                    <!--<div class="form-group col-md-3 col-sm-6">
                        <div class="col-md-12" id="ddhotel">-->

                        @*style="visibility:hidden"*@
                        @*@Html.DropDownList("MaKS", null, htmlAttributes: new { @class = "form-control" })*@
                        <!--<ul class="form-control" id="maks" name="MaKS">

                                </ul>

                            </div>

                        </div>-->
                        <p id="removep" class="blue col-md-12">Vui lòng chọn tỉnh thành</p>
                        <div class="col-md-12" id="ddhotel" style="visibility:hidden">
                            <select class="form-control" name="MaKS">
                                @{
                                    foreach (var item in ks)
                                    {
                                        <option value="@item.MaKS">@item.TenKS</option>
                                    }
                                }
                                @Html.ValidationMessageFor(model => model.MaKS, "", new { @class = "text-danger" })
                            </select>
                        </div>
                    }
                    <p id="abc" class="text-danger col-md-12" style="visibility:hidden;">*Mã tỉnh: <input id="tst" name="matinh" class="border-0 text-danger" /> </p>
                </div>
                <div class="form-group col-md-3 col-sm-6">
                    @Html.LabelFor(model => model.SoChoNull, "So cho trong", htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.SoChoNull, new { htmlAttributes = new { @class = "form-control col-md-12 "}, required = "required" })
                        @Html.ValidationMessageFor(model => model.SoChoNull, "", new { @class = "text-danger" })
                    </div>
                </div>

                @* /a line *@

                <div class="form-group col-md-6 col-sm-12">
                    @Html.LabelFor(model => model.TenTour, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-12">
                        @Html.TextAreaFor(model => model.TenTour, new { @class = "form-control content-editor col-md-12", required = "required" })
                        @Html.ValidationMessageFor(model => model.TenTour, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-6 col-sm-12">
                    @Html.LabelFor(model => model.GioiThieu, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-12">
                        @Html.TextAreaFor(model => model.GioiThieu, new { @class = "form-control content-editor col-md-12", required = "required" })
                        @Html.ValidationMessageFor(model => model.GioiThieu, "", new { @class = "text-danger" })
                    </div>
                </div>
                @* /a liine *@
                <div class="row">
                    <fieldset class="col-md-5 col-sm-12 border rounded-3 p-3">
                        <legend class="float-none w-auto px-3 text-muted">Thong tin khoi hanh</legend>
                        <div class="form-group col-md-12">
                            @Html.LabelFor(model => model.NoiKhoiHanh, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.NoiKhoiHanh, new { htmlAttributes = new { @class = "form-control col-md-12", required = "required" } })
                                @Html.ValidationMessageFor(model => model.NoiKhoiHanh, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group col-md-12">
                            @Html.LabelFor(model => model.NgayKhoihanh, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-12">
                                <input class="form-control text-box single-line col-md-12 datepicker" data-val="true" data-val-date="The field NgayNhap must be a date." id="NgayKhoiHanh" name="NgayKhoiHanh" type="date" min="@DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss tt")" required>

                                @Html.ValidationMessageFor(model => model.NgayKhoihanh, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group col-md-12">
                            @Html.LabelFor(model => model.NgayTroVe, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-12">
                                <input class="form-control text-box single-line col-md-12" data-val="true" data-val-date="The field NgayNhap must be a date." id="NgayTroVe" name="NgayTroVe" type="datetime-local" required>

                                @Html.ValidationMessageFor(model => model.NgayTroVe, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </fieldset>
                    <div class="col-md-1" style="margin-right:45px;"></div>
                    <fieldset class="col-md-5 col-sm-12 border rounded-3 p-3">
                        <legend class="float-none w-auto px-3 text-muted">Thong tin gia ve</legend>

                        <div class="form-group col-md-12">
                            @Html.LabelFor(model => model.HanChotDatVe, "Due day (*)", htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-12">

                                <input class="form-control col-md-12 text-box single-line datepicker" data-val="true" id="HanChotDatVe" name="HanChotDatVe" type="date" min="@DateTime.Now.ToString("yyyy-MM-dd")" required>
                                @Html.ValidationMessageFor(model => model.HanChotDatVe, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group col-md-12">
                            @Html.LabelFor(model => model.GiaTreEm, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.GiaTreEm, new { htmlAttributes = new { @class = "form-control col-md-12", required = "required" } })
                                @Html.ValidationMessageFor(model => model.GiaTreEm, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group col-md-12">
                            @Html.LabelFor(model => model.GiaNguoiLon, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.GiaNguoiLon, new { htmlAttributes = new { @class = "form-control col-md-12", required = "required" } })
                                @Html.ValidationMessageFor(model => model.GiaNguoiLon, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </fieldset>

                </div>

            </div>

            <div class="row text-center" style="margin-top:20px;">
                <div class="col-sm-12">
                    <a class="btn btn-warning btn-sm" href="/Tourmanager/QuanLyTour">Back to list</a>
                    <input type="submit" value="Create Tour" class="btn btn-success btn-sm" />
                </div>
            </div>
        </form>
    </div>
</div>
<div>
</div>
<div>(*) Format date: "MM/dd/yyyy hh:mm tt"</div>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    ImagerTour.onchange = evt => {
        const [file] = ImagerTour.files
        if (file) {
            preview.src = URL.createObjectURL(file);
            document.getElementById("preview").style.visibility = "visible";
        }
    }

    function getDropDown(ddl) {
        var selectedValue = $(ddl).val();
        var paragraph = document.getElementById("removep");
        if (paragraph) {
            paragraph.parentNode.removeChild(paragraph);
            paragraph = false;
        }

        matinh = selectedValue;
        document.getElementById("abc").style.visibility = 'visible';
        document.getElementById("ddhotel").style.visibility = 'visible';
        $('#tst').val(selectedValue);
        console.log(matinh);
        $.ajax({
            url: '/Tourmanager/GetValue',
            type: 'GET',
            data: { value: matinh },
            success: function (result) {
                // xử lý kết quả trả về từ Controller
                console.log(result);
            }
        });
    }
</script>

